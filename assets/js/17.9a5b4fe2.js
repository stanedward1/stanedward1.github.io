(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{408:function(t,a,s){"use strict";s.r(a);var e=s(2),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("strong",[t._v("Table of Contents")]),t._v(" "),a("em",[t._v("generated with "),a("a",{attrs:{href:"https://github.com/thlorenz/doctoc",target:"_blank",rel:"noopener noreferrer"}},[t._v("DocToc"),a("OutboundLink")],1)])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B"}},[t._v("数据类型")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E6%95%B4%E5%9E%8B"}},[t._v("整型")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%B5%AE%E7%82%B9%E7%B1%BB%E5%9E%8B"}},[t._v("浮点类型")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#char%E7%B1%BB%E5%9E%8B"}},[t._v("char类型")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#boolean%E7%B1%BB%E5%9E%8B"}},[t._v("boolean类型")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%8F%98%E9%87%8F"}},[t._v("变量")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%8F%98%E9%87%8F%E5%88%9D%E5%A7%8B%E5%8C%96"}},[t._v("变量初始化")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%B8%B8%E9%87%8F"}},[t._v("常量")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E8%BF%90%E7%AE%97%E7%AC%A6"}},[t._v("运算符")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E8%87%AA%E5%A2%9E%E8%BF%90%E7%AE%97%E7%AC%A6%E4%B8%8E%E8%87%AA%E5%87%8F%E8%BF%90%E7%AE%97%E7%AC%A6"}},[t._v("自增运算符与自减运算符")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%85%B3%E7%B3%BB%E8%BF%90%E7%AE%97%E7%AC%A6%E4%B8%8Eboolean%E8%BF%90%E7%AE%97%E7%AC%A6"}},[t._v("关系运算符与boolean运算符")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6"}},[t._v("位运算符")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%95%B0%E5%AD%A6%E5%87%BD%E6%95%B0%E4%B8%8E%E5%B8%B8%E9%87%8F"}},[t._v("数学函数与常量")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2"}},[t._v("数值类型之间的转换")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2"}},[t._v("强制类型转换")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%8B%AC%E5%8F%B7%E4%B8%8E%E8%BF%90%E7%AE%97%E7%AC%A6%E7%BA%A7%E5%88%AB"}},[t._v("括号与运算符级别")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B"}},[t._v("枚举类型")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%AD%97%E7%AC%A6%E4%B8%B2"}},[t._v("字符串")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%AD%90%E4%B8%B2"}},[t._v("子串")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%8B%BC%E6%8E%A5"}},[t._v("拼接")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E4%B8%8D%E5%8F%AF%E5%8F%98%E5%AD%97%E7%AC%A6%E4%B8%B2"}},[t._v("不可变字符串")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%A3%80%E6%B5%8B%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E7%9B%B8%E7%AD%89"}},[t._v("检测字符串是否相等")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E7%A9%BA%E4%B8%B2%E4%B8%8Enull%E4%B8%B2"}},[t._v("空串与Null串")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%AD%97%E7%AC%A6%E4%B8%B2api"}},[t._v("字符串API")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%9E%84%E5%BB%BA%E5%AD%97%E7%AC%A6%E4%B8%B2"}},[t._v("构建字符串")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA"}},[t._v("输入输出")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E8%AF%BB%E5%8F%96%E8%BE%93%E5%85%A5"}},[t._v("读取输入")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA"}},[t._v("格式化输出")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%8E%A7%E5%88%B6%E6%B5%81%E7%A8%8B"}},[t._v("控制流程")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%9D%97%E4%BD%9C%E7%94%A8%E5%9F%9F"}},[t._v("块作用域")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5"}},[t._v("条件语句")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%BE%AA%E7%8E%AF"}},[t._v("循环")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E7%A1%AE%E5%AE%9A%E5%BE%AA%E7%8E%AF"}},[t._v("确定循环")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%A4%9A%E9%87%8D%E9%80%89%E6%8B%A9switch%E8%AF%AD%E5%8F%A5"}},[t._v("多重选择：switch语句")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E4%B8%AD%E6%96%AD%E6%8E%A7%E5%88%B6%E6%B5%81%E7%A8%8B%E8%AF%AD%E5%8F%A5"}},[t._v("中断控制流程语句")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%A4%A7%E6%95%B0%E5%80%BC"}},[t._v("大数值")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%95%B0%E7%BB%84"}},[t._v("数组")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#for-each%E5%BE%AA%E7%8E%AF"}},[t._v("for each循环")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%95%B0%E7%BB%84%E5%88%9D%E5%A7%8B%E5%8C%96%E4%BB%A5%E5%8F%8A%E5%8C%BF%E5%90%8D%E6%95%B0%E7%BB%84"}},[t._v("数组初始化以及匿名数组")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%95%B0%E7%BB%84%E6%8B%B7%E8%B4%9D"}},[t._v("数组拷贝")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0"}},[t._v("命令行参数")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%95%B0%E7%BB%84%E6%8E%92%E5%BA%8F"}},[t._v("数组排序")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84"}},[t._v("多维数组")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E4%B8%8D%E8%A7%84%E5%88%99%E6%95%B0%E7%BB%84"}},[t._v("不规则数组")])])])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Java对大小写敏感，如果出现了大小拼写错误，那程序将无法运行。")])]),t._v(" "),a("li",[a("p",[t._v("运行编译程序时，Java虚拟机将从指定类中的main方法开始执行，根据"),a("a",{attrs:{href:"https://docs.oracle.com/javase/specs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java语言规范"),a("OutboundLink")],1),t._v("，main方法必须声明为public")])])]),t._v(" "),a("h2",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),a("ul",[a("li",[t._v("Java是一种强类型语言，这就意味着必须为每一个变量声明一种类型。在Java中，一共有八种基本类型，其中有4种整型，2种浮点类型，1种字符类型，1种表示真值的boolean类型。")]),t._v(" "),a("li",[t._v("Java中有一个能够表示任意精度的算术包，通常称之为”大数值“。虽然称之为大数值，但它不是一种新的Java类型，而是一个Java对象。")])]),t._v(" "),a("h3",{attrs:{id:"整型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整型"}},[t._v("#")]),t._v(" 整型")]),t._v(" "),a("p",[t._v("整型用于表示没有小数部分的数值，它允许是负数。Java提供了4种整型。")]),t._v(" "),a("p",[a("em",[t._v("1字节 = 8位")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("存储需求")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4字节")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("short")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("2字节")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("8字节")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("byte")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1字节")])])])]),t._v(" "),a("h3",{attrs:{id:"浮点类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮点类型"}},[t._v("#")]),t._v(" 浮点类型")]),t._v(" "),a("p",[t._v("浮点类型用于表示有小数部分的数值，在Java种有2种")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("存储需求")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("float")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4字节")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("8字节")])])])]),t._v(" "),a("p",[t._v("double又称双精度数值，float又称单精度数值")]),t._v(" "),a("p",[t._v("float类型的数值有一个后缀F。没有后缀的浮点数值默认为double类型")]),t._v(" "),a("p",[a("strong",[t._v("三个特殊的浮点数值：")])]),t._v(" "),a("ul",[a("li",[t._v("正无穷大")]),t._v(" "),a("li",[t._v("负无穷大")]),t._v(" "),a("li",[t._v("NaN")])]),t._v(" "),a("p",[t._v("使用Double.isNaN方法可以检测特定值是否等于Double.NaN")]),t._v(" "),a("h3",{attrs:{id:"char类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#char类型"}},[t._v("#")]),t._v(" char类型")]),t._v(" "),a("p",[t._v("char类型用来表示单个字符，通常用来表示字符常量。")]),t._v(" "),a("p",[a("strong",[t._v("特殊字符的转义序列符")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("转义序列")]),t._v(" "),a("th",[t._v("名称")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("\\b")]),t._v(" "),a("td",[t._v("退格")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("\\t")]),t._v(" "),a("td",[t._v("制表")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("\\n")]),t._v(" "),a("td",[t._v("换行")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("\\r")]),t._v(" "),a("td",[t._v("回车")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v('/"')]),t._v(" "),a("td",[t._v("双引号")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("/'")]),t._v(" "),a("td",[t._v("单引号")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("\\\\")]),t._v(" "),a("td",[t._v("反斜杠")])])])]),t._v(" "),a("h3",{attrs:{id:"boolean类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boolean类型"}},[t._v("#")]),t._v(" boolean类型")]),t._v(" "),a("p",[t._v("boolean类型有两个值：false和true，用来判定逻辑条件。整型值和boolean值不能相互转换")]),t._v(" "),a("h2",{attrs:{id:"变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),a("p",[t._v("在Java中，每一个变量属于一种类型。在声明变量时，变量所属的类型位于变量名之前。")]),t._v(" "),a("h3",{attrs:{id:"变量初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量初始化"}},[t._v("#")]),t._v(" 变量初始化")]),t._v(" "),a("p",[t._v("声明一个变量之后，必须用赋值语句对变量进行显式初始化，也就是必须给一个变量一个值。")]),t._v(" "),a("h3",{attrs:{id:"常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常量"}},[t._v("#")]),t._v(" 常量")]),t._v(" "),a("p",[t._v("在Java中，利用关键字final指示常量。关键词final表示这个变量只能被赋值一次，一旦被赋值之后，就不能在更改了。习惯上，常量名使用全大写。")]),t._v(" "),a("p",[t._v("在Java中，经常希望某个常量可以在一个类中的多个方法中使用，通常将这些常量称为类常量。可以使用关键字static final设置一个类常量。类常量的定义位于main方法的外部，因此，在同一个类的其他方法中也可以使用这个常量。而且，如果一个常量被声明为public，那么其他类的方法也可以使用这个常量。")]),t._v(" "),a("h2",{attrs:{id:"运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("#")]),t._v(" 运算符")]),t._v(" "),a("p",[t._v("整数被0除将会产生一个异常，而浮点数被0除将会得到无穷大或NaN结果。")]),t._v(" "),a("h3",{attrs:{id:"自增运算符与自减运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自增运算符与自减运算符"}},[t._v("#")]),t._v(" 自增运算符与自减运算符")]),t._v(" "),a("p",[t._v("前缀方式：++n，对变量值加1，先进行+1运算")]),t._v(" "),a("p",[t._v("后缀方式：n++，对变量值加1，使用变量原来的值")]),t._v(" "),a("h3",{attrs:{id:"关系运算符与boolean运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关系运算符与boolean运算符"}},[t._v("#")]),t._v(" 关系运算符与boolean运算符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("符号")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("==")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("等于")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("!=")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("不等于")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("<")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("小于")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(">")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("大于")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("<=")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("小于等于")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(">=")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("大于等于")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("&&")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("与")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("||")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("或")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("?")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("三元")])])])]),t._v(" "),a("h3",{attrs:{id:"位运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#位运算符"}},[t._v("#")]),t._v(" 位运算符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("符号")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("&")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("与")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("|")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("或")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("^")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("异或")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("~")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("非")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(">>")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("二进制位右移操作")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("<<")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("二进制位左移操作")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v(">>>")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("用0填充高位")])])])]),t._v(" "),a("h3",{attrs:{id:"数学函数与常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数学函数与常量"}},[t._v("#")]),t._v(" 数学函数与常量")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档地址"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"数值类型之间的转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数值类型之间的转换"}},[t._v("#")]),t._v(" 数值类型之间的转换")]),t._v(" "),a("p",[t._v("黑色箭头代表无信息丢失的转换，红色箭头代表可能有精度的损失。")]),t._v(" "),a("p",[a("img",{attrs:{src:"asset/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2.png",alt:"image-20220401225854471"}})]),t._v(" "),a("h3",{attrs:{id:"强制类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强制类型转换"}},[t._v("#")]),t._v(" 强制类型转换")]),t._v(" "),a("p",[t._v("举个栗子")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9.99")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" nx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("对于(int) Math.round(9.99)这种形式，round方法返回的结果为long类型，由于存在信息丢失的可能，使用强制类型转换，将long类型转换成int类型。")]),t._v(" "),a("h3",{attrs:{id:"括号与运算符级别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#括号与运算符级别"}},[t._v("#")]),t._v(" 括号与运算符级别")]),t._v(" "),a("p",[t._v("http://c.biancheng.net/view/794.html")]),t._v(" "),a("h3",{attrs:{id:"枚举类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#枚举类型"}},[t._v("#")]),t._v(" 枚举类型")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Size")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    SMALL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MEDIUM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LARGE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EXTRA_LARGE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行输出结果")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Size")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SMALL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),a("p",[t._v("Java没有内置的字符串类型，而是在标准的Java类库中提供了一个预定义类，叫做String。每个用双括号括起来的字符都是String类的一个实例。")]),t._v(" "),a("h3",{attrs:{id:"子串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子串"}},[t._v("#")]),t._v(" 子串")]),t._v(" "),a("p",[t._v("String的substring方法可以从一个较大的字符串中提取出一个子串。")]),t._v(" "),a("h3",{attrs:{id:"拼接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拼接"}},[t._v("#")]),t._v(" 拼接")]),t._v(" "),a("p",[t._v("使用+号拼接两个字符串，字符串与非字符串进行拼接时，会把非字符串自动转为字符串。")]),t._v(" "),a("h3",{attrs:{id:"不可变字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不可变字符串"}},[t._v("#")]),t._v(" 不可变字符串")]),t._v(" "),a("p",[t._v("String也叫不可变字符串，编译器可以让字符串共享。")]),t._v(" "),a("h3",{attrs:{id:"检测字符串是否相等"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检测字符串是否相等"}},[t._v("#")]),t._v(" 检测字符串是否相等")]),t._v(" "),a("p",[t._v("可以使用equals方法检测两个字符串是否相等。")]),t._v(" "),a("p",[a("strong",[t._v("不能使用==运算符检测两个字符串是否相等，因为==看的是两个字符串是不是在同一个位置。可能会存在内容相同的多个字符串放置在不同的位置。")])]),t._v(" "),a("h3",{attrs:{id:"空串与null串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空串与null串"}},[t._v("#")]),t._v(" 空串与Null串")]),t._v(" "),a("p",[t._v("空串指”“，是长度为0的字符串，调用以下代码检查")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Null串表示目前没有任何对象与该变量关联。可调用以下代码检查")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"字符串api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串api"}},[t._v("#")]),t._v(" 字符串API")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查询地址"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"构建字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建字符串"}},[t._v("#")]),t._v(" 构建字符串")]),t._v(" "),a("p",[t._v("构建字符串时，使用String会每次都构建一个String对象，这个时候，很耗时，也浪费空间。使用StringBuilder可以避免这个问题的发生。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuilder")]),t._v(" builder "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbuilder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbuilder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" builder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"输入输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输入输出"}},[t._v("#")]),t._v(" 输入输出")]),t._v(" "),a("h3",{attrs:{id:"读取输入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#读取输入"}},[t._v("#")]),t._v(" 读取输入")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scanner")]),t._v(" in "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Scanner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("in"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" in"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextLine")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("nextLine方法接收可能包含空格的字符串")]),t._v(" "),a("p",[t._v("next方法接收一个单词")]),t._v(" "),a("p",[t._v("nextInt接收整数")]),t._v(" "),a("p",[t._v("nextDouble接收浮点数")]),t._v(" "),a("h3",{attrs:{id:"格式化输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#格式化输出"}},[t._v("#")]),t._v(" 格式化输出")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.runoob.com/w3cnote/java-printf-formate-demo.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("相关文档"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"控制流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#控制流程"}},[t._v("#")]),t._v(" 控制流程")]),t._v(" "),a("h3",{attrs:{id:"块作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#块作用域"}},[t._v("#")]),t._v(" 块作用域")]),t._v(" "),a("p",[t._v("块，也叫复合语句，是指由一对花括号括起来的若干条简单的Java语句。")]),t._v(" "),a("p",[t._v("块确定了变量的作用域。")]),t._v(" "),a("p",[t._v("一个块可以嵌套在另一个块中。")]),t._v(" "),a("p",[t._v("不能在嵌套的两个块中声明同名的变量。")]),t._v(" "),a("h3",{attrs:{id:"条件语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#条件语句"}},[t._v("#")]),t._v(" 条件语句")]),t._v(" "),a("p",[t._v("if")]),t._v(" "),a("h3",{attrs:{id:"循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#循环"}},[t._v("#")]),t._v(" 循环")]),t._v(" "),a("ul",[a("li",[t._v("当条件为true时，while循环执行一条语句。")]),t._v(" "),a("li",[t._v("希望循环体至少执行一次，使用do/while循环语句可以实现。")])]),t._v(" "),a("h3",{attrs:{id:"确定循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#确定循环"}},[t._v("#")]),t._v(" 确定循环")]),t._v(" "),a("ul",[a("li",[t._v("for循环语句")])]),t._v(" "),a("h3",{attrs:{id:"多重选择-switch语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多重选择-switch语句"}},[t._v("#")]),t._v(" 多重选择：switch语句")]),t._v(" "),a("p",[t._v("处理多个选项使用")]),t._v(" "),a("p",[t._v("case标签可以是："),a("strong",[t._v("char,byte,short,int,枚举常量,字符串")])]),t._v(" "),a("h3",{attrs:{id:"中断控制流程语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#中断控制流程语句"}},[t._v("#")]),t._v(" 中断控制流程语句")]),t._v(" "),a("p",[t._v("break 退出循环")]),t._v(" "),a("p",[t._v("continue 跳过这一步，走循环的下一步")]),t._v(" "),a("h2",{attrs:{id:"大数值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#大数值"}},[t._v("#")]),t._v(" 大数值")]),t._v(" "),a("p",[t._v("BigInteger类实现了任意精度的整数运算")]),t._v(" "),a("p",[t._v("BigDecimal类实现了任意精度的浮点数运算")]),t._v(" "),a("p",[t._v("使用静态的valueOf方法可以将普通的数值转换成大数值，+和*需要使用add和multiply方法。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigInteger")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigInteger")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigInteger")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigInteger")]),t._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("multiply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档地址"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),a("p",[t._v("在声明数组变量时，需要指出数组类型和数组变量的名字，如：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建了一个可以存储100个整数的数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("一旦创建了数组，就不能再改变它的大小。如果经常需要在运行过程中扩展数组的大小，就应该使用另外一种数据结构——ArrayList。")]),t._v(" "),a("h3",{attrs:{id:"for-each循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-each循环"}},[t._v("#")]),t._v(" for each循环")]),t._v(" "),a("p",[t._v("利用Array类的toString方法，可以返回一个包含数组元素的字符串，这些元素被放置在括号内，并用逗号分割。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[1,2,3,4,5,6]"')]),t._v("\n")])])]),a("h3",{attrs:{id:"数组初始化以及匿名数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组初始化以及匿名数组"}},[t._v("#")]),t._v(" 数组初始化以及匿名数组")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用这种语句，不需要调用new")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化匿名数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"数组拷贝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组拷贝"}},[t._v("#")]),t._v(" 数组拷贝")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://c.biancheng.net/view/924.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("相关文档"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"命令行参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令行参数"}},[t._v("#")]),t._v(" 命令行参数")]),t._v(" "),a("p",[t._v("Java应用程序有带String args[]参数的main方法。这个参数表明main方法将接收一个字符串数组，也就是命令行参数。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"数组排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组排序"}},[t._v("#")]),t._v(" 数组排序")]),t._v(" "),a("p",[t._v("使用Array类中的sort方法")]),t._v(" "),a("p",[t._v("这个方法使用了优化的快速排序算法")]),t._v(" "),a("h3",{attrs:{id:"多维数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多维数组"}},[t._v("#")]),t._v(" 多维数组")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" magicSquare "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("要想快速的打印一个二位数组的数据元素列表，可以调用"),a("code",[t._v("Array.deepToString(a)")])]),t._v(" "),a("h3",{attrs:{id:"不规则数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不规则数组"}},[t._v("#")]),t._v(" 不规则数组")]),t._v(" "),a("p",[t._v("Java实际上没有多维数组，只有一维数组。多维数组被解释为“数组的数组”。")])])}),[],!1,null,null,null);a.default=n.exports}}]);